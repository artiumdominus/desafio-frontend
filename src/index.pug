doctype html
html(lang="pt-br")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width")
    title DesafioQConcursos

    link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Mulish:wght@500&display=swap")
  body
    #home.frame
      .overlay
        header
          span.name PEDRO BASILIO
          nav
            ul
              li
                a(href="#home") Home
              li
                a#sobre_link(href="#sobre") Sobre
              li
                a#desafio_link(href="#desafio") Desafio
        main
          h1 Desenvolvedor Front End
          h2 desafio Qconcursos.com
        footer
          .social
            a(target="__blank" href="https://t.me/artiumdominus")
              svg.social-icon(focusable="false" viewBox="0 0 24 24" aria-hidden="true")
                path(d="M9.78 18.65l.28-4.23 7.68-6.92c.34-.31-.07-.46-.52-.19L7.74 13.3 3.64 12c-.88-.25-.89-.86.2-1.3l15.97-6.16c.73-.33 1.43.18 1.15 1.3l-2.72 12.81c-.19.91-.74 1.13-1.5.71L12.6 16.3l-1.99 1.93c-.23.23-.42.42-.83.42z")
            a(target="__blank" href="https://www.linkedin.com/in/pedro-basilio-de-camargo-neto-87b54717a/")
              svg.social-icon(focusable="false" viewBox="0 0 24 24" aria-hidden="true")
                path(d="M19 3a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h14m-.5 15.5v-5.3a3.26 3.26 0 0 0-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 0 1 1.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 0 0 1.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 0 0-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z")
            a(target="__blank" href="https://github.com/artiumdominus")
              svg.social-icon(focusable="false" viewBox="0 0 24 24" aria-hidden="true")
                path(d="M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3")
    
    #sobre.frame
      main
        .container
          h1 Sobre

          p Olá forma de vida baseada em carbono.

          p.
            Quero que você reflita um pouco sobre a história da computação. Repare que cada linguagem de programação
            é a priori projetada para suprir uma necessidade específica. Até os anos 80, a computação científica
            era basicamente composta da execução de argoritmos específicos sob arquivos em lote ou simulações, enquanto
            que a computação comercial se resumia a programas de cadastros em bancos de dados e emissão de relatórios.
            Somente a partir daí os sistemas operacionais evoluiram o suficiente para se haver o interesse de se
            criar sistemas mais complexos.

          p.
            Foi então na década de 90 em que as linguagens orientadas a objetos se popularizaram graças ao início da
            computação pessoal, ao florescimento das interfaces gráficas e da ethernet. Coisas que já existiam antes
            mas até então não eram prioridade. Juntas, estas forças motrizes impulsionaram o surgimento de linguagens
            cada vez mais generalistas para darem conta da complexidade dos sistemas que estavam surgindo, que agora
            deveriam lidar com eventos, requisições, estados, dados, renderização, tudo isto ao mesmo tempo.
            Concretizava-se então o conceito de hyperlink, idealizado por Ted Nelson em 1964 quando tentava construir
            seu Projeto Xanadu.
          
          p.
            Mas eventualmente os estilos arquiteturais foram convergindo em um darwinismo de paradigmas, enquanto que
            as linguagens têm o hábito de "roubarem" características umas das outras. De forma tal que talvez seja possível
            abstrair varios pontos chave dos sistemas atuais em linguagens declarativas: Tal como cadastro (input),
            validação, query (output), template (apresentação), gestão de estado (processamento),
            estado volátil e confirmado (cache e persistência), trigger (notificação ou requisição), e etc.
            Acredito que eliminar o excesso de código que apenas existem para gerir o fluxo de dados, e focar nossos
            esforços nos aspectos algoritmicos e modulares da construção de software, seja crucial para a sustentabilidade
            dos sistemas complexos, e para a viabilidade dos muito complexos.

    #desafio.frame
      main
        .container
          h1 Desafio

          #card.card
            .picture-column
              .picture
              a(target="__blank") Visitar Perfil
            .info-column
              .info
                .info-line Repositorios: ...
                .info-line Seguidores: ...
                .info-line Seguindo: ...
              .buttons
                button#ver_repositorios VER REPOSITÓRIOS
                button#ver_favoritos VER FAVORITOS

      footer Desafio Desenvolvedor Front - Qconcursos.com
